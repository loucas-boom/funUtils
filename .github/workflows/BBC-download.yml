name: BBC Downloader - Trigger via Issue

on:
  issues:
    types: [opened, edited]

  # 手动触发（可选）
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Build Docker image
        run: |          
          docker build -t bbc-downloader .

      - name: Run Docker container
        run: |          
          docker run -d -p 8080:8080 --name BBCDownloader bbc-downloader

      - name: Wait for server to start
        run: |          
          sleep 10

      - name: Trigger download endpoint
        id: download
        run: |          
          response=$(curl -s http://localhost:8080/funny/download)
          echo "response=$response" >> $GITHUB_ENV

      - name: Save downloaded files
        if: always()
        run: |          
          mkdir -p ./podcasts
          docker cp BBCDownloader:/app/podcasts/. ./podcasts/

      - name: Upload podcast files as artifact
        uses: actions/upload-artifact@v3
        with:
          name: daily-podcasts
          path: ./podcasts/

      - name: Check if issue contains {"downloadBBC"}
        id: check_issue
        run: |          
         content=$(echo "$INPUT_ISSUE_BODY" | tr -d '\r' | tr -d '\n')
          if [[ "$content" == *"{\"downloadBBC\"}"* ]]; then
            echo "match=true" >> $GITHUB_ENV
          else
            echo "match=false" >> $GITHUB_ENV
          fi

      - name: Comment on Issue
        if: env.match == 'true'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |            
            🎙️ BBC Podcast Download Completed!
            **Download Response:**
            json ${{ env.response }}
            📁 You can download the podcasts from the attached artifact below.

                        [🔗 Download Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)

                  - name: Close the issue
                    if: env.match == 'true'
                    run: |          

                ISSUE_NUMBER=${{ github.event.issue.number }}
                      gh issue close $ISSUE_NUMBER --comment "✅ This issue has been automatically closed after successful podcast download."